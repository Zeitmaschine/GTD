[gd_scene load_steps=23 format=2]

[ext_resource path="res://Audio/Life_lost.wav" type="AudioStream" id=1]
[ext_resource path="res://Audio/Die.wav" type="AudioStream" id=2]
[ext_resource path="res://Audio/Buy_failed.wav" type="AudioStream" id=3]
[ext_resource path="res://Assets/Tilesets/Grassland/Tileset_grassland.png" type="Texture" id=4]
[ext_resource path="res://Audio/Buy.wav" type="AudioStream" id=5]
[ext_resource path="res://Scenes/Interface.tscn" type="PackedScene" id=6]
[ext_resource path="res://Scenes/Path2D.gd" type="Script" id=7]
[ext_resource path="res://Scenes/Rounds.tscn" type="PackedScene" id=8]
[ext_resource path="res://Scenes/Wegweiser.tscn" type="PackedScene" id=9]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

#Uni-Variablen
export var upgrade1unlock = false
export var upgrade2unlock = false

#Derzeitige Karte
var map = 1

#Status
export var waverunning = false
export var wave = 1
export var money = 1350 #Startgeld
export var healthy = 100
export var enemycount = 0 # Anzahl der Gegner auf dem Spiel (Grundlage, für Rundenenden, wo alle Gegner zerstört sein müssen.)
var moneyinterface
var healthinterface
var healthdeath
var waveinterface
var max_universitaet = false
var unigekauft = false
var unitext
var pauseAllowed = 0



#Preloading
var mathematiker = preload(\"res://Scenes/Mathematiker.tscn\")
var informatiker = preload(\"res://Scenes/Informatiker.tscn\")
var mathebombenturm = preload(\"res://Scenes/MatheBombenTurm.tscn\")
var winkelninja = preload(\"res://Scenes/Winkelninja.tscn\")
var universitaet = preload(\"res://Scenes/Universität.tscn\")

#Preise der Türme
export var mathematikerPrice = 500
export var informatikerPrice = 700
export var bombenturmPrice = 900
export var winkelninjaPrice = 880
export var uniPrice = 500

#Platzierung
var placemode = false



#Verdienen von Geld
func add_money(ammount, death):
	money += ammount
	if death == true:
		$Die.play()

#Geld durch Verbesserungen
func add_extramoney(ammount):
	if waverunning == true:
		money += ammount

#Leben durch die Mensa
func add_extrahealth(ammount):
	healthy += ammount

#Lebensabzug
func remove_health(ammount):
	healthy -= ammount
	$Life_Lost.play()

#Implementierung der Interfaces
func _ready():
	moneyinterface = get_node(\"InterfaceLayer/Interface/StatsMenu/HBoxContainer/Moneybar/MarginContainer/Backround/Count\")
	healthinterface = get_node(\"InterfaceLayer/Interface/StatsMenu/HBoxContainer/Healthbar/MarginContainer/Backround/Health\")
	waveinterface = get_node(\"InterfaceLayer/Interface/RundenContainer/Rundenzahl\")
	healthdeath = get_node(\"InterfaceLayer/Interface/GameOverLayer/GameOver\")
	unigekauft = get_node(\"InterfaceLayer/Interface/ShopLayer/ShopMenu\")
	unitext = get_node(\"InterfaceLayer/Interface/ShopLayer/ShopMenu/ShopBackround/UniversitaetText\")

#Hochzählen der Werte + Überprüfung von Input
func _process(delta):
	moneyinterface.setCoins(money)
	healthinterface.setHealth(healthy)
	healthdeath.setHealth(healthy)
	waveinterface.setWave(wave)
	wave = get_node(\"Rounds\").wave
	
	#Debug-Knopf
	if Input.is_action_just_pressed(\"Hotkey0\"):
		money += 1000
	
	if Input.is_action_just_pressed(\"spacebar\") && waverunning == false:
		waverunning = true
		
	if waverunning == true:
		get_node(\"Rounds\").checkWave()
	else:
		$Path2D/Timer.stop()

	if Input.is_action_just_pressed(\"Hotkey1\"):
		if money >= mathematikerPrice:
			add_mathematiker()
		else:
			$Buy_failed.play()

	if Input.is_action_just_pressed(\"Hotkey2\"):
		if money >= informatikerPrice:
			add_informatiker()
		else:
			$Buy_failed.play()
			

	if Input.is_action_just_pressed(\"Hotkey3\"):
		if money >= bombenturmPrice:
			add_mathebombenturm()
		else:
			$Buy_failed.play()

	if Input.is_action_just_pressed(\"Hotkey4\"):
		if money >= winkelninjaPrice:
			add_winkelninja()
		else:
			$Buy_failed.play()

	if Input.is_action_just_pressed(\"Hotkey5\"):
		if money >= uniPrice  && max_universitaet == false:
			get_node(\"InterfaceLayer/Interface/ShopLayer/ShopMenu\").unigekauft = true
			max_universitaet = true
			unitext.text = \"Gekauft\"
			add_universitaet()
		else:
			$Buy_failed.play()
			


#Mathermatiker platzieren
func add_mathematiker():
	if placemode == false:
		placemode = true
		var mathematiker_instance = mathematiker.instance()
		add_child(mathematiker_instance)
		var originalcolor = mathematiker_instance.get_node(\"Sprite_Mathematiker\").modulate
		while (true):
			yield(get_tree().create_timer(0.001), \"timeout\")
			mathematiker_instance.position = get_global_mouse_position()
			if mathematiker_instance.get_node(\"Mathematiker_Area\").get_overlapping_bodies().size() > 1:
				mathematiker_instance.get_node(\"Sprite_Mathematiker\").modulate = Color(255,0,0,255)
				mathematiker_instance.get_node(\"Range_Sprite\").modulate = Color(50,0,0,0)
			
			if mathematiker_instance.get_node(\"Mathematiker_Area\").get_overlapping_bodies().size() == 1:
				mathematiker_instance.get_node(\"Sprite_Mathematiker\").modulate = originalcolor
				mathematiker_instance.get_node(\"Range_Sprite\").modulate = originalcolor
			
			if Input.is_action_just_pressed(\"left_click\") && mathematiker_instance.get_node(\"Mathematiker_Area\").get_overlapping_bodies().size() == 1:
				money = money - mathematikerPrice
				$Buy.play()
				break
			
			if Input.is_action_just_pressed(\"left_click\") && mathematiker_instance.get_node(\"Mathematiker_Area\").get_overlapping_bodies().size() > 1:
				$Buy_failed.play()
			
			if Input.is_action_just_pressed(\"right_click\"):
				$Buy_failed.play()
				mathematiker_instance.queue_free()
				break
		mathematiker_instance.placed = true
		placemode = false

#Informatiker platzieren
func add_informatiker():
	if placemode == false:
		placemode = true
		var informatiker_instance = informatiker.instance()
		add_child(informatiker_instance)
		var originalcolor = informatiker_instance.get_node(\"Sprite_Informatiker\").modulate
		while (true):
			yield(get_tree().create_timer(0.001), \"timeout\")
			informatiker_instance.position = get_global_mouse_position()
			if informatiker_instance.get_node(\"Informatiker_Area\").get_overlapping_bodies().size() > 1:
				informatiker_instance.get_node(\"Sprite_Informatiker\").modulate = Color(255,0,0,255)
				informatiker_instance.get_node(\"Range_Sprite\").modulate = Color(50,0,0,0)
			
			if informatiker_instance.get_node(\"Informatiker_Area\").get_overlapping_bodies().size() == 1:
				informatiker_instance.get_node(\"Sprite_Informatiker\").modulate = originalcolor
				informatiker_instance.get_node(\"Range_Sprite\").modulate = originalcolor
			
			if Input.is_action_just_pressed(\"left_click\") && informatiker_instance.get_node(\"Informatiker_Area\").get_overlapping_bodies().size() == 1:
				money = money - informatikerPrice
				$Buy.play()
				break
			
			if Input.is_action_just_pressed(\"left_click\") && informatiker_instance.get_node(\"Informatiker_Area\").get_overlapping_bodies().size() > 1:
				$Buy_failed.play()
			
			if Input.is_action_just_pressed(\"right_click\"):
				$Buy_failed.play()
				informatiker_instance.queue_free()
				break
		informatiker_instance.placed = true
		placemode = false
		

#Bombenturm platzieren
func add_mathebombenturm():
	if placemode == false:
		placemode = true
		var mathebombenturm_instance = mathebombenturm.instance()
		add_child(mathebombenturm_instance)
		var originalcolor = mathebombenturm_instance.get_node(\"Sprite_MatheBombenTurm\").modulate
		while (true):
			yield(get_tree().create_timer(0.001), \"timeout\")
			mathebombenturm_instance.position = get_global_mouse_position()
			if mathebombenturm_instance.get_node(\"MatheBombenTurm_Area\").get_overlapping_bodies().size() > 1:
				mathebombenturm_instance.get_node(\"Sprite_MatheBombenTurm\").modulate = Color(255,0,0,255)
				mathebombenturm_instance.get_node(\"Range_Sprite\").modulate = Color(50,0,0,0)
			
			if mathebombenturm_instance.get_node(\"MatheBombenTurm_Area\").get_overlapping_bodies().size() == 1:
				mathebombenturm_instance.get_node(\"Sprite_MatheBombenTurm\").modulate = originalcolor
				mathebombenturm_instance.get_node(\"Range_Sprite\").modulate = originalcolor
			
			if Input.is_action_just_pressed(\"left_click\") && mathebombenturm_instance.get_node(\"MatheBombenTurm_Area\").get_overlapping_bodies().size() == 1:
				money = money - bombenturmPrice
				$Buy.play()
				break
			
			if Input.is_action_just_pressed(\"left_click\") && mathebombenturm_instance.get_node(\"MatheBombenTurm_Area\").get_overlapping_bodies().size() > 1:
				$Buy_failed.play()
			
			if Input.is_action_just_pressed(\"right_click\"):
				$Buy_failed.play()
				mathebombenturm_instance.queue_free()
				break
		mathebombenturm_instance.placed = true
		placemode = false
	
#Winkelninja platzieren
func add_winkelninja():
	if placemode == false:
		placemode = true
		var winkelninja_instance = winkelninja.instance()
		var this_instance = add_child(winkelninja_instance)
		var originalcolor = winkelninja_instance.get_node(\"Sprite_Winkelninja\").modulate
		while (true):
			yield(get_tree().create_timer(0.001), \"timeout\")
			winkelninja_instance.position = get_global_mouse_position()
			if winkelninja_instance.get_node(\"Winkelninja_Area\").get_overlapping_bodies().size() > 1:
				winkelninja_instance.get_node(\"Sprite_Winkelninja\").modulate = Color(255,0,0,255)
				winkelninja_instance.get_node(\"Range_Sprite\").modulate = Color(50,0,0,0)
			
			if winkelninja_instance.get_node(\"Winkelninja_Area\").get_overlapping_bodies().size() == 1:
				winkelninja_instance.get_node(\"Sprite_Winkelninja\").modulate = originalcolor
				winkelninja_instance.get_node(\"Range_Sprite\").modulate = originalcolor
			
			if Input.is_action_just_pressed(\"left_click\") && winkelninja_instance.get_node(\"Winkelninja_Area\").get_overlapping_bodies().size() == 1:
				money = money - winkelninjaPrice
				$Buy.play()
				break
			
			if Input.is_action_just_pressed(\"left_click\") && winkelninja_instance.get_node(\"Winkelninja_Area\").get_overlapping_bodies().size() > 1:
				$Buy_failed.play()
			
			if Input.is_action_just_pressed(\"right_click\"):
				$Buy_failed.play()
				winkelninja_instance.queue_free()
				break
		winkelninja_instance.placed = true
		placemode = false
	
#Uni platzieren
func add_universitaet():
	if placemode == false:
		placemode = true
		var universitaet_instance = universitaet.instance()
		var this_instance = add_child(universitaet_instance)
		var originalcolor = universitaet_instance.get_node(\"Universitäts-Sprite\").modulate
		while (true):
			yield(get_tree().create_timer(0.001), \"timeout\")
			universitaet_instance.position = get_global_mouse_position()
			if universitaet_instance.get_node(\"Universität_Area\").get_overlapping_bodies().size() > 1:
				universitaet_instance.get_node(\"Universitäts-Sprite\").modulate = Color(255,0,0,255)
			
			if universitaet_instance.get_node(\"Universität_Area\").get_overlapping_bodies().size() == 1:
				universitaet_instance.get_node(\"Universitäts-Sprite\").modulate = originalcolor
			
			if Input.is_action_just_pressed(\"left_click\") && universitaet_instance.get_node(\"Universität_Area\").get_overlapping_bodies().size() == 1:
				money = money - uniPrice
				$Buy.play()
				get_node(\"InterfaceLayer/Interface/ShopLayer/ShopMenu\").unigekauft = true
				max_universitaet = true
				break
			
			if Input.is_action_just_pressed(\"left_click\") && universitaet_instance.get_node(\"Universität_Area\").get_overlapping_bodies().size() > 1:
				$Buy_failed.play()
			
			if Input.is_action_just_pressed(\"right_click\"):
				max_universitaet = false
				get_node(\"InterfaceLayer/Interface/ShopLayer/ShopMenu\").unigekauft = false
				unitext.text = \"Universität: 500$\"
				$Buy_failed.play()
				universitaet_instance.queue_free()
				break
		universitaet_instance.placed = true
		placemode = false

#Freischaltung des Upgrades 1
func setUpgrade1Unlock(upgrade11unlock):
	upgrade1unlock = upgrade11unlock

#Überprüfung des Upgrades 1
func getUpgrade1Unlock():
	return upgrade1unlock

#Freischaltung des Upgrades 2
func setUpgrade2Unlock(upgrade22unlock):
	upgrade2unlock = upgrade22unlock

#Überprüfung des Upgrades 2
func getUpgrade2Unlock():
	return upgrade2unlock



"

[sub_resource type="ConvexPolygonShape2D" id=2]
points = PoolVector2Array( 128, 112.289, 0, 113.254, 0, 14.392, 128, 14.392 )

[sub_resource type="ConvexPolygonShape2D" id=3]
points = PoolVector2Array( 112.161, 128, 18.1221, 128, 18.1221, 0.127319, 111.679, 0 )

[sub_resource type="ConvexPolygonShape2D" id=4]
points = PoolVector2Array( 128, 111.325, 0, 113.254, 0, 17.7678, 128, 16.321 )

[sub_resource type="ConvexPolygonShape2D" id=5]
points = PoolVector2Array( 112.923, 128, 16.4724, 128, 14.0612, 0, 111.958, 0 )

[sub_resource type="ConvexPolygonShape2D" id=6]
points = PoolVector2Array( 128, 111.807, 0, 110.843, 0, 16.8032, 128, 14.8742 )

[sub_resource type="ConvexPolygonShape2D" id=7]
points = PoolVector2Array( 17.2842, 128, 14.8729, 88.8619, 17.2842, 45.9413, 26.9292, 34.8495, 45.7371, 21.8287, 126.273, 16.0417, 127.72, 107.188, 107.465, 111.528, 107.948, 126.96 )

[sub_resource type="ConvexPolygonShape2D" id=8]
points = PoolVector2Array( 0.68457, 16.0417, 79.2919, 18.9352, 90.866, 22.311, 105.333, 48.8349, 108.227, 128, 18.0458, 127.924, 17.0812, 112.975, 9.36511, 107.67, 0.202393, 107.67 )

[sub_resource type="ConvexPolygonShape2D" id=9]
points = PoolVector2Array( 108.43, 0.888855, 112.288, 41.8804, 106.501, 85.2831, 87.6931, 100.233, 43.8081, 108.914, 0, 109.878, 0, 19.6968, 11.4971, 19.2145, 19.6954, 9.08716, 18.731, 0 )

[sub_resource type="ConvexPolygonShape2D" id=10]
points = PoolVector2Array( 106.78, 0.406616, 108.709, 11.9807, 113.05, 16.321, 126.07, 16.321, 126.553, 109.878, 42.6406, 106.502, 30.1021, 91.5524, 23.8328, 73.7091, 19.4924, 38.0223, 19.4924, 0.888855 )

[sub_resource type="ConvexPolygonShape2D" id=11]
points = PoolVector2Array( 112.364, 128, 16.8783, 126.478, 16.8783, 0, 110.918, 0 )

[sub_resource type="TileSet" id=12]
0/name = "Tileset_grassland.png 0"
0/texture = ExtResource( 4 )
0/tex_offset = Vector2( 0, 0 )
0/modulate = Color( 1, 1, 1, 1 )
0/region = Rect2( 0, 0, 128, 128 )
0/tile_mode = 0
0/occluder_offset = Vector2( 0, 0 )
0/navigation_offset = Vector2( 0, 0 )
0/shapes = [  ]
0/z_index = 0
1/name = "Tileset_grassland.png 1"
1/texture = ExtResource( 4 )
1/tex_offset = Vector2( 0, 0 )
1/modulate = Color( 1, 1, 1, 1 )
1/region = Rect2( 128, 0, 128, 128 )
1/tile_mode = 0
1/occluder_offset = Vector2( 0, 0 )
1/navigation_offset = Vector2( 0, 0 )
1/shapes = [  ]
1/z_index = 0
2/name = "Tileset_grassland.png 2"
2/texture = ExtResource( 4 )
2/tex_offset = Vector2( 0, 0 )
2/modulate = Color( 1, 1, 1, 1 )
2/region = Rect2( 256, 0, 128, 128 )
2/tile_mode = 0
2/occluder_offset = Vector2( 0, 0 )
2/navigation_offset = Vector2( 0, 0 )
2/shapes = [  ]
2/z_index = 0
3/name = "Tileset_grassland.png 3"
3/texture = ExtResource( 4 )
3/tex_offset = Vector2( 0, 0 )
3/modulate = Color( 1, 1, 1, 1 )
3/region = Rect2( 384, 0, 128, 128 )
3/tile_mode = 0
3/occluder_offset = Vector2( 0, 0 )
3/navigation_offset = Vector2( 0, 0 )
3/shapes = [  ]
3/z_index = 0
4/name = "Tileset_grassland.png 4"
4/texture = ExtResource( 4 )
4/tex_offset = Vector2( 0, 0 )
4/modulate = Color( 1, 1, 1, 1 )
4/region = Rect2( 512, 0, 128, 128 )
4/tile_mode = 0
4/occluder_offset = Vector2( 0, 0 )
4/navigation_offset = Vector2( 0, 0 )
4/shapes = [  ]
4/z_index = 0
5/name = "Tileset_grassland.png 5"
5/texture = ExtResource( 4 )
5/tex_offset = Vector2( 0, 0 )
5/modulate = Color( 1, 1, 1, 1 )
5/region = Rect2( 1280, 0, 128, 128 )
5/tile_mode = 0
5/occluder_offset = Vector2( 0, 0 )
5/navigation_offset = Vector2( 0, 0 )
5/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 7 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
5/z_index = 0
6/name = "Tileset_grassland.png 6"
6/texture = ExtResource( 4 )
6/tex_offset = Vector2( 0, 0 )
6/modulate = Color( 1, 1, 1, 1 )
6/region = Rect2( 1408, 0, 128, 128 )
6/tile_mode = 0
6/occluder_offset = Vector2( 0, 0 )
6/navigation_offset = Vector2( 0, 0 )
6/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 8 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
6/z_index = 0
7/name = "Tileset_grassland.png 7"
7/texture = ExtResource( 4 )
7/tex_offset = Vector2( 0, 0 )
7/modulate = Color( 1, 1, 1, 1 )
7/region = Rect2( 1280, 128, 128, 128 )
7/tile_mode = 0
7/occluder_offset = Vector2( 0, 0 )
7/navigation_offset = Vector2( 0, 0 )
7/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 9 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
7/z_index = 0
8/name = "Tileset_grassland.png 8"
8/texture = ExtResource( 4 )
8/tex_offset = Vector2( 0, 0 )
8/modulate = Color( 1, 1, 1, 1 )
8/region = Rect2( 1408, 128, 128, 128 )
8/tile_mode = 0
8/occluder_offset = Vector2( 0, 0 )
8/navigation_offset = Vector2( 0, 0 )
8/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 10 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
8/z_index = 0
9/name = "Tileset_grassland.png 9"
9/texture = ExtResource( 4 )
9/tex_offset = Vector2( 0, 0 )
9/modulate = Color( 1, 1, 1, 1 )
9/region = Rect2( 1536, 0, 128, 128 )
9/tile_mode = 0
9/occluder_offset = Vector2( 0, 0 )
9/navigation_offset = Vector2( 0, 0 )
9/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 11 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
9/z_index = 0
10/name = "Tileset_grassland.png 10"
10/texture = ExtResource( 4 )
10/tex_offset = Vector2( 0, 0 )
10/modulate = Color( 1, 1, 1, 1 )
10/region = Rect2( 1536, 128, 128, 128 )
10/tile_mode = 0
10/occluder_offset = Vector2( 0, 0 )
10/navigation_offset = Vector2( 0, 0 )
10/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 2 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
10/z_index = 0
11/name = "Tileset_grassland.png 11"
11/texture = ExtResource( 4 )
11/tex_offset = Vector2( 0, 0 )
11/modulate = Color( 1, 1, 1, 1 )
11/region = Rect2( 1664, 0, 128, 128 )
11/tile_mode = 0
11/occluder_offset = Vector2( 0, 0 )
11/navigation_offset = Vector2( 0, 0 )
11/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 3 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
11/z_index = 0
12/name = "Tileset_grassland.png 12"
12/texture = ExtResource( 4 )
12/tex_offset = Vector2( 0, 0 )
12/modulate = Color( 1, 1, 1, 1 )
12/region = Rect2( 1664, 128, 128, 128 )
12/tile_mode = 0
12/occluder_offset = Vector2( 0, 0 )
12/navigation_offset = Vector2( 0, 0 )
12/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 4 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
12/z_index = 0
13/name = "Tileset_grassland.png 13"
13/texture = ExtResource( 4 )
13/tex_offset = Vector2( 0, 0 )
13/modulate = Color( 1, 1, 1, 1 )
13/region = Rect2( 1792, 0, 128, 128 )
13/tile_mode = 0
13/occluder_offset = Vector2( 0, 0 )
13/navigation_offset = Vector2( 0, 0 )
13/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 5 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
13/z_index = 0
14/name = "Tileset_grassland.png 14"
14/texture = ExtResource( 4 )
14/tex_offset = Vector2( 0, 0 )
14/modulate = Color( 1, 1, 1, 1 )
14/region = Rect2( 1792, 128, 128, 128 )
14/tile_mode = 0
14/occluder_offset = Vector2( 0, 0 )
14/navigation_offset = Vector2( 0, 0 )
14/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 6 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
14/z_index = 0

[sub_resource type="Curve2D" id=13]
_data = {
"points": PoolVector2Array( 0, 0, 0, 0, 717.12, -31.7899, 0, 0, 0, 0, 716.138, 318.15, 0, 0, 0, 0, 66.0068, 320.78, 0, 0, 0, 0, 66.3378, 577.5, 0, 0, 0, 0, 970.738, 573.7, 0, 0, 0, 0, 963.446, 197.32, 0, 0, 0, 0, 1350.28, 190.331, 0, 0, 0, 0, 1351.79, 709.498, 0, 0, 0, 0, 970.605, 712.83, 0, 0, 0, 0, 968.923, 967.253, 0, 0, 0, 0, 1600.67, 964.857, 0, 0, 0, 0, 1600.67, 711.398, 0, 0, 0, 0, 1849.84, 712.83, 0, 0, 0, 0, 1848.4, 314.741, 0, 0, 0, 0, 1741.01, 313.31, 0, 0, 0, 0, 1742.06, -37.9226 )
}

[node name="Grassland" type="Node2D"]
light_mask = 0
script = SubResource( 1 )

[node name="Rounds" parent="." instance=ExtResource( 8 )]

[node name="TileMap" type="TileMap" parent="."]
tile_set = SubResource( 12 )
cell_size = Vector2( 128, 128 )
collision_layer = 8
collision_mask = 0
format = 1
tile_data = PoolIntArray( 0, 0, 0, 1, 0, 0, 2, 0, 0, 3, 0, 0, 4, 0, 0, 5, 13, 0, 6, 0, 0, 7, 0, 0, 8, 2, 0, 9, 0, 0, 10, 0, 0, 11, 0, 0, 12, 4, 0, 13, 13, 0, 14, 0, 0, 15, 0, 0, 16, 0, 0, 65536, 0, 0, 65537, 0, 0, 65538, 0, 0, 65539, 0, 0, 65540, 1, 0, 65541, 13, 0, 65542, 0, 0, 65543, 5, 0, 65544, 12, 0, 65545, 12, 0, 65546, 6, 0, 65547, 0, 0, 65548, 0, 0, 65549, 13, 0, 65550, 0, 0, 65551, 0, 0, 65552, 2, 0, 131072, 5, 0, 131073, 10, 0, 131074, 14, 0, 131075, 12, 0, 131076, 12, 0, 131077, 7, 0, 131078, 0, 0, 131079, 11, 0, 131080, 0, 0, 131081, 0, 0, 131082, 13, 0, 131083, 0, 0, 131084, 0, 0, 131085, 8, 0, 131086, 6, 0, 131087, 0, 0, 131088, 0, 0, 196608, 13, 0, 196609, 0, 0, 196610, 4, 0, 196611, 4, 0, 196612, 0, 0, 196613, 0, 0, 196614, 3, 0, 196615, 13, 0, 196616, 0, 0, 196617, 1, 0, 196618, 13, 0, 196619, 2, 0, 196620, 0, 0, 196621, 0, 0, 196622, 13, 0, 196623, 0, 0, 196624, 0, 0, 262144, 8, 0, 262145, 12, 0, 262146, 12, 0, 262147, 12, 0, 262148, 12, 0, 262149, 12, 0, 262150, 12, 0, 262151, 7, 0, 262152, 0, 0, 262153, 0, 0, 262154, 13, 0, 262155, 0, 0, 262156, 0, 0, 262157, 0, 0, 262158, 11, 0, 262159, 0, 0, 262160, 0, 0, 327680, 0, 0, 327681, 0, 0, 327682, 0, 0, 327683, 0, 0, 327684, 1, 0, 327685, 0, 0, 327686, 0, 0, 327687, 5, 0, 327688, 14, 0, 327689, 14, 0, 327690, 7, 0, 327691, 0, 0, 327692, 5, 0, 327693, 12, 0, 327694, 7, 0, 327695, 0, 0, 327696, 1, 0, 393216, 0, 0, 393217, 0, 0, 393218, 0, 0, 393219, 0, 0, 393220, 0, 0, 393221, 0, 0, 393222, 0, 0, 393223, 13, 0, 393224, 0, 0, 393225, 0, 0, 393226, 0, 0, 393227, 0, 0, 393228, 13, 0, 393229, 2, 0, 393230, 0, 0, 393231, 0, 0, 393232, 0, 0, 458752, 0, 0, 458753, 0, 0, 458754, 2, 0, 458755, 0, 0, 458756, 0, 0, 458757, 0, 0, 458758, 0, 0, 458759, 8, 0, 458760, 12, 0, 458761, 14, 0, 458762, 10, 0, 458763, 12, 0, 458764, 7, 0, 458765, 0, 0, 458766, 0, 0, 458767, 0, 0, 458768, 0, 0, 524288, 0, 0, 524289, 0, 0, 524290, 0, 0, 524291, 0, 0, 524292, 0, 0, 524293, 0, 0, 524294, 0, 0, 524295, 0, 0, 524296, 0, 0, 524297, 0, 0, 524298, 0, 0, 524299, 0, 0, 524300, 0, 0, 524301, 0, 0, 524302, 0, 0, 524303, 2, 0, 524304, 0, 0, 589824, 0, 0, 589825, 0, 0, 589826, 0, 0, 589827, 0, 0, 589828, 0, 0, 589829, 0, 0, 589830, 0, 0, 589831, 0, 0, 589832, 0, 0, 589833, 4, 0, 589834, 4, 0, 589835, 4, 0, 589836, 0, 0, 589837, 0, 0, 589838, 0, 0, 589839, 0, 0, 589840, 0, 0 )

[node name="Path2D" type="Path2D" parent="."]
position = Vector2( -12.8878, 0 )
curve = SubResource( 13 )
script = ExtResource( 7 )

[node name="Timer" type="Timer" parent="Path2D"]
wait_time = 12.024
autostart = true

[node name="InterfaceLayer" type="CanvasLayer" parent="."]
layer = 0

[node name="Interface" parent="InterfaceLayer" instance=ExtResource( 6 )]
margin_left = 7.75623
margin_top = 2.6225
margin_right = -1853.24
margin_bottom = -1031.11

[node name="Die" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 2 )
volume_db = -26.288

[node name="Life_Lost" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource( 1 )
volume_db = -10.089

[node name="Buy" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 5 )
volume_db = -23.223

[node name="Buy_failed" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 3 )
volume_db = -23.223

[node name="Wegweiser" parent="." instance=ExtResource( 9 )]
position = Vector2( 555.77, 225.137 )
rotation = -3.14159
scale = Vector2( 0.882965, -0.96969 )

[node name="Wegweiser2" parent="." instance=ExtResource( 9 )]
position = Vector2( 1141.34, 101.471 )
rotation = -3.14159
scale = Vector2( -1.11703, -0.96969 )

[node name="Wegweiser3" parent="." instance=ExtResource( 9 )]
position = Vector2( 1153.97, 610.483 )
rotation = -3.14159
scale = Vector2( 0.882965, -0.96969 )
[connection signal="timeout" from="Path2D/Timer" to="Path2D" method="_on_Timer_timeout"]
