[gd_scene load_steps=6 format=2]

[ext_resource path="res://Assets/Universität/Universität.png" type="Texture" id=1]
[ext_resource path="res://Scenes/UpgradeInterfaceUni.tscn" type="PackedScene" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

export var upgradelvl = 1
export var upgrade1 = false
export var upgrade2 = false
var placed = false


func _ready():
	pass # Replace with function body.


func _process(delta):
	pass


func _on_Universitt_Area_mouse_entered():
	scale = Vector2(1.2,1.2)


func _on_Universitt_Area_mouse_exited():
	scale = Vector2(1.0,1.0)
	
func setUpgradelvl(newUpgradelvl):
	upgradelvl = newUpgradelvl
	get_parent().upgradelvl = newUpgradelvl
	
func setUpgrade1(newstatus):
	upgrade1 = newstatus
	get_parent().upgrade1_unlock = newstatus
	
func setUpgrade2(newstatus):
	upgrade1 = newstatus
	get_parent().upgrade2_unlock = newstatus


func _on_Universitt_Area_input_event(viewport, event, shape_idx):
	if(event.is_action_pressed(\"left_click\") and placed == true):
		 $UpgradeWindow/UniversitaetUpgrade.visible =  true
"

[sub_resource type="CircleShape2D" id=2]
radius = 84.8881

[sub_resource type="CircleShape2D" id=3]
radius = 84.1989

[node name="Universität" type="KinematicBody2D"]
collision_layer = 2
collision_mask = 2
script = SubResource( 1 )

[node name="Universitäts-Sprite" type="Sprite" parent="."]
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 2 )

[node name="Universität_Area" type="Area2D" parent="."]
collision_layer = 2
collision_mask = 10

[node name="CollisionUniversität" type="CollisionShape2D" parent="Universität_Area"]
shape = SubResource( 3 )

[node name="UpgradeWindow" type="CanvasLayer" parent="."]

[node name="UniversitaetUpgrade" parent="UpgradeWindow" instance=ExtResource( 2 )]
visible = false
[connection signal="input_event" from="Universität_Area" to="." method="_on_Universitt_Area_input_event"]
[connection signal="mouse_entered" from="Universität_Area" to="." method="_on_Universitt_Area_mouse_entered"]
[connection signal="mouse_exited" from="Universität_Area" to="." method="_on_Universitt_Area_mouse_exited"]
