[gd_scene load_steps=7 format=2]

[ext_resource path="res://Assets/Mathematiker/Mathematiker.png" type="Texture" id=1]
[ext_resource path="res://Assets/Mathematiker/Range.png" type="Texture" id=2]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D 


var attackrange = 3
export var attackpower = 1
var projectilespeed = 1000
export var firerate = 1.0
var can_fire = true
var projectile = preload (\"res://Scenes/Projectile.tscn\")
var enemyinrange = 0
var target = null

func _ready():
	pass


func _process(delta):
	find_closest_target()
	if can_fire == true && enemyinrange > 0:
		rotation = (target.global_position - position).angle() - PI/2
		var projectile_instance = projectile.instance()
		projectile_instance.position = $Firepoint.get_global_position()
		projectile_instance.rotation_degrees = rotation_degrees
		projectile_instance.apply_impulse(Vector2(), Vector2(0, projectilespeed).rotated(rotation))
		projectile_instance.setDamage(attackpower)
		get_tree().get_root().add_child(projectile_instance)
		can_fire = false
		yield(get_tree().create_timer(firerate), \"timeout\")
		can_fire = true
		
	
	


func _on_Range_body_entered(body):
		enemyinrange += 1

func _on_Range_body_exited(body):
		enemyinrange -= 1

func find_closest_target():
	var units = $Range.get_overlapping_bodies()
	if units.size() > 0:
		var closest = units[0].get_parent()
		for unit in units:
			if position.distance_to(unit.global_position) < position.distance_to(closest.global_position):
				closest = unit.get_parent()
			target = closest
	else:
			target = null
			
func hit():
	pass


func _on_Mathematiker_Area_mouse_entered():
	scale = Vector2(1.2,1.2)
	$Range_Sprite.visible = true


func _on_Mathematiker_Area_mouse_exited():
	scale = Vector2(1,1)
	$Range_Sprite.visible = false
"

[sub_resource type="CircleShape2D" id=2]
radius = 53.1815

[sub_resource type="GDScript" id=3]
script/source = "extends Area2D


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass
"

[sub_resource type="CircleShape2D" id=4]
radius = 199.586

[node name="Mathematiker" type="KinematicBody2D"]
collision_layer = 2
collision_mask = 2
script = SubResource( 1 )

[node name="CollisionMathematiker(Direkt)" type="CollisionShape2D" parent="."]
shape = SubResource( 2 )

[node name="Range_Sprite" type="Sprite" parent="."]
visible = false
texture = ExtResource( 2 )

[node name="Firepoint" type="Node2D" parent="."]
position = Vector2( -8.7395, 74.7491 )

[node name="Mathematiker" type="Sprite" parent="."]
texture = ExtResource( 1 )

[node name="Range" type="Area2D" parent="."]
visible = false
position = Vector2( -0.394424, 0.0813217 )
gravity_vec = Vector2( 0, 0 )
collision_layer = 0
script = SubResource( 3 )

[node name="CollisionRange" type="CollisionShape2D" parent="Range"]
shape = SubResource( 4 )

[node name="Mathematiker_Area" type="Area2D" parent="."]

[node name="CollisionMathematiker" type="CollisionShape2D" parent="Mathematiker_Area"]
shape = SubResource( 2 )
[connection signal="body_entered" from="Range" to="." method="_on_Range_body_entered"]
[connection signal="body_exited" from="Range" to="." method="_on_Range_body_exited"]
[connection signal="mouse_entered" from="Mathematiker_Area" to="." method="_on_Mathematiker_Area_mouse_entered"]
[connection signal="mouse_exited" from="Mathematiker_Area" to="." method="_on_Mathematiker_Area_mouse_exited"]
